name: Maven Build, Coverage, and Analysis

on:
  push:
    branches:
      - main  # Cambiar a la rama que desees

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean package --file pom.xml

    - name: Publish artifact
      uses: actions/upload-artifact@v4
      with:
        name: pet-build
        path: target/*.jar

  coverage:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: pet-build

    - name: Run tests and generate JaCoCo report
      run: mvn clean test jacoco:report
      env:
        MAVEN_OPTS: "-Dmaven.test.failure.ignore=false"

    - name: Upload JaCoCo report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: target/site/jacoco/jacoco.xml

  analyze:
    runs-on: ubuntu-latest
    needs: coverage
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven

    #- name: Download artifact
    #  uses: actions/download-artifact@v4
    #  with:
    #    name: pet-build
    
    - name: Download JaCoCo report
      uses: actions/download-artifact@v4
      with:
        name: jacoco-report
        path: target/site/jacoco/index.html

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Add steps for analyzing the code (e.g., SonarQube, PMD, Checkstyle, etc.)
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 
           -Dsonar.projectKey=ECI-PetApp_PetApi
           -Dsonar.coverage.jacoco.xmlReportPaths=${{ github.workspace }}/target/site/jacoco/index.html
